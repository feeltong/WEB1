액션 태그란 ? 

JSP 페이지에서 액션 태그(Action tag)는 스크립트, 주석, 디렉티브와 함께 JSP 페이지를 이루고 있는 요소이다.

액션 태그는 페이지와 페이지 사이의 제어를 이동시킬 수 있고, 다른 페이지의 실행 결과를 현재의 페이지에 포함시킬 수도 있다.

또한, 자바빈도 JSP 페이지에서 사용할 수 있는 기능을 제공하고, 웹 브라우저에서 자바 애플릿을 실행시킬 수 있는 기능도 지원한다.

액션 태그는 XML 문법을 따르기 때문에 단독 태그의 경우도 반드시 종료 태그를 포함해야 한다.



(1) 바디(Body)가 있는 경우 : 시작 태그와 종료 태그의 쌍으로 이루어짐



<jsp:include page="a.jsp" flush="false">

<jsp:param name="paramName" value="value1" />

</jsp:include>



(2) 바디(body)가 없는 경우 : 시작 태그에 종료 태그가 포함됨.



<jsp:param name="paramName" value="vlaue1" />


Redirect 와 Forward 의 차이

 JSP 환경에서 현재 작업중인 페이지에서 다른페이지로 이동하는 두가지 방식의 페이지 전환기능

사례를 통해 redirect 와 forward의 차이점에 대해 감을 잡아보자!
여기서 고객은 클라이언트이고 , 123 번은 url 이며 , 상담원은 서버가 된다

첫번째 사례(redirect)
1.고객이 고객센터로 상담원에게 123 번으로 전화를 한다
2.상담원은 고객에게 다음과 같이 이야기한다 . "고객님 해당 문의사항은 124번으로 다시 문의 해 주세요"
3.고객은 다시 124번으로 문의해서 일을 처리한다

두번쨰 사례(forward)
1.고객이 고객센터로 전화를 한다
2.상담원은 해당 문의사항에 대해 잘 알지 못해서 옆의 다른 상당원에게 해당 문의사항에 답을 얻는다
3.상담원은 고객에게 문의사항을 처리해준다

1>forward

web ,container 차원에서의 페이지 이동 , 실제로 웹 브라우저는 다른 페이지로 이동했는지 알 수 없다
두번쨰 사례의 경우 , 고객은 상담원이 누구한테 물어봤는지 알 수 없다.

웹 브라우저에는 최초 호출한 url만 표시되고 , 이동한 페이지의 url 정보는 볼 수가 없다.(두번쨰 고객은 123번으로만 전화 했기 떄문에 알 수 없음)

동일한 web container 에 있는 페이지로만 이동이 가능한다.

현재 실행중인 페이지와 forward에 의해 호출된 페이지는 request , response  객체를 공유한다.
(문의사항은 고객이 전화를 끊을 때까지 유호하다)

forward 방식은 다음 이동한 url로 요청정보를 그대로 전달한다 말 그대로 forward(건네주기) 하는 것이다.
그렇기 떄문에 사용자가 최초로 요청한 요청정보는 다음 url에서도 유효하다

2>redirect

web container 는 redirect 명령이 들어오면 웹 브라우저에게 다른 페이지로 이동하라는 명령을 내린다
(첫번쨰 사례)

웹 브라우저는 url을 지시된 주소로 바꾸고 그 주소로 이동하낟

다른 web container 에 있는 주소로 이동이 가능하다

새로운 페이지에서는 request , response 객체가 새롭게 생성된다(123 번에서 곡갱이 요청했던 문의사항은 사리지고 124번으로 다시 걸어서 요청한 문의사항을 다시 말해야한다)

redirect의 경우 최초 요청을 받은 url1 에서 클라이언트에 redirect 할 url2 를 리턴하고 , 클라이언트는 전혀 새로운 요청을 생성하여 url2에 다시 요청을 보낸다
따라서 처음 보냈던 최초의 요청정보는 유호하지 않게된다

다시 정리해보자면 redirect 와 forward의 차이점은 크게 두가지로 나눌수 있다.
첫째 , url의 변화 여부(변화 O -> redirect , 변화 X -> forward)
둘쨰 , 객체의 재사용여부(재사용 O ->forward , 재사용 X  -> redirect)

즉 , 시스템에 변화가 생기는 요청의 경우 redirect 방식으로 응답하는 것이 바람직하며 ,
시스템에 변화가 생기지 않는 단순조희 의 경우 forward방식을 사용하는 것이 바람직하다!
